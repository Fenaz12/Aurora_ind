

.recorder-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(3, 1fr);
    grid-column-gap: 10px;
    grid-row-gap: 0px;
    justify-items: center;
    align-items: center;
    min-height: 100vh;
    min-width: 100vw;
    background: linear-gradient(to top, #0575e6, #021b79);
    z-index: 1;
}
.stop-watch{ 
    grid-area: 1 / 1 / 2 / 2; 
 
}
h1{
    font-size: 90px;
}
.controls { 
    grid-area: 3 / 1 / 4 / 2; 

}
.recording{
    display: grid;
    grid-template: 1fr / 1fr;
    place-items: center;
    grid-area: 2 / 1 / 3 / 2;
    position: relative;
    top:-20px;
}
.recorder-canvas{
    position: absolute;
    width: 60vw;
    height: 40vh;
    z-index: 2;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    opacity: 0.7;
}
.recording-button{
    position: absolute;
    z-index: 3;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    border-radius: 50%;
    cursor: pointer;
}

.recording-button.micicon:hover{
    box-shadow: 0 0 18px #6ac3ff8c;

}

.recording-button.fadein{
    opacity: 1;
	animation-name: fadeInOpacity;
	animation-iteration-count: 1;
	animation-timing-function: ease-in;
	animation-duration: 2s;
}
.control-buttons{
    position: relative;
    display: flex;
    justify-content: space-around;
    left:2px;
    top: -30px;
    width: 400px;
}
.control-buttons.start{
    cursor: pointer;
}

.control-buttons.pause{
}
control-buttons.start.disabled{
    cursor: context-menu;
}
.blue{
    cursor: pointer;
}
.send{
    cursor: not-allowed;
}
audio{
    position: absolute;
    top: 60%;
    left: 50%;
    transform: translate(-50%,-50%);
}

.audio-react-recorder{
    width: 0;
    height: 0;
}

@keyframes fadeInOpacity {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}